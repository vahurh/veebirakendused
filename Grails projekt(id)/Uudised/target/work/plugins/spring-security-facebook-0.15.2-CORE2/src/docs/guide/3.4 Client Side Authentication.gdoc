Based on [Facebook Javascript SDK|https://developers.facebook.com/docs/reference/javascript/] authorization. Useful
when you need to use FB Javascript SDK on client side.

And there are two ways:

 * try authenticate user on each request, to any page - it's @transparent@ filter
 * authenticate only when user redirected to specified page, like a standard username/password authentication - it's @cookieDirect@ filter

If you're using first way (@transparent@ filter), your user will be automatically authenticated whenever he has
Facebook cookie. Btw, don't forget that you should *reload* current page after you have successfully authenticated user
on client side. Like:

{code}
<facebookAuth:init>
   FB.Event.subscribe('auth.login', function() {
      window.location.reload();
   });
</facebookAuth:init>
{code}

If you're using second way (@cookieDirect@ filter), you could configure URL that will be used for authentication at @Config.groovy@:

{code}
grails.plugins.springsecurity.facebook.filter.processUrl = '/j_spring_security_facebook_check' //it's default value
{code}

And after authorization redirect user to /j_spring_security_facebook_check, like:

{code}
<facebookAuth:init>
   FB.Event.subscribe('auth.login', function() {
      window.location.href = '/j_spring_security_facebook_check'
   });
</facebookAuth:init>

<g:javascript>
   $('#fbloginbutton').click(function() {
       FB.login();
   });
</g:javascript>
{code}